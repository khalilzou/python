那Python适合开发哪些类型的应用呢？
    首选是网络应用，包括网站、后台服务等等；
    其次是许多日常需要的小工具，包括系统管理员需要的脚本任务等等；
    另外就是把其他语言开发的程序再包装起来，方便使用。
缺点：速度慢 不能加密
注意区分命令行模式和Python交互模式.
    在Python交互式环境下，只能输入Python代码并立刻执行,并立刻得到结果。Python交互式环境会把每一行Python代码的结果自动打印出来.
    在命令行模式下，可以执行python进入Python交互式环境，也可以执行python hello.py运行一个.py文件.并且结果不会自动打印，需用print。
在交互式命令行写程序，好处是一下就能得到结果，坏处是没法保存。所以，实际开发的时候，我们总是使用一个文本编辑器来写代码，写完了，保存为一个文件.py。
Python的交互模式和直接运行.py文件有什么区别呢？
    直接输入python进入交互模式，相当于启动了Python解释器，但是等待你一行一行地输入源代码，每输入一行就执行一行。
    直接运行.py文件相当于启动了Python解释器，然后一次性把.py文件的源代码给执行了，你是没有机会以交互的方式输入源代码的。
#表示注释
长字符串：三引号“”“……”“”在这之中的字符串可以完美的呈现，换行也会被呈现出来。转义字符“\”也可以用来作为输入字符中的换行用，但是输出后，不会有换行
原始字符串： 放在r中的字符串 输出的时候和输入是一样的r"……"。但是在该用转义字符的时候还是要用，只是输出会将转义字符按输入输出，所以\不能放在最后，
    因为程序不能理解是否是结束的字符或者只是一个转义字符
模块：是对python功能的扩展，可以被导入python中。
    导入方法 import 模块名，然后用模块.函数来引用。 或者 from模块import函数 直接引用函数，但是不能区分不同模块中的相同名字的函数
print()函数也可以接受多个字符串，用逗号“,”隔开，就可以连成一串输出。字符串会自动添加空格在各字符串之间。
    如print('The', 'jumps', 'dog')。输出为the jumps dog
当语句以冒号:结尾时，缩进的语句视为代码块。Python使用缩进来组织代码块，坚持使用4个空格的缩进。Python程序是大小写敏感的。
十六进制用0x前缀
变量名必须是大小写英文、数字和_的组合，且不能用数字开头
    可以把任意数据类型赋值给变量，同一个变量可以反复赋值，而且可以是不同类型的变量，这种变量本身类型不固定的语言称之为动态语言。
在Python中，通常用全部大写的变量名表示常量。所谓常量就是不能变的变量，比如常数π
/除法计算结果是浮点数，即使是两个整数恰好整除，结果也是浮点数。整数的地板除//永远是整数，即使除不尽，//除法只取结果的整数部分。
Python的整数没有大小限制
字符编码
    因为计算机只能处理数字，如果要处理文本，就必须先把文本转换为数字才能处理
    最早只有127个字符被编码到计算机里，也就是大小写英文字母、数字和一些符号，这个编码表被称为ASCII编码
    Unicode把所有语言都统一到一套编码里
    ASCII编码是1个字节，而Unicode编码通常是2个字节如果要用到非常偏僻的字符，就需要4个字节）
    本着节约的精神，又出现了把Unicode编码转化为“可变长编码”的UTF-8编码。
    常用的英文字母被编码成1个字节，汉字通常是3个字节，只有很生僻的字符才会被编码成4-6个字节
    在计算机内存中，统一使用Unicode编码，当需要保存到硬盘或者需要传输的时候，就转换为UTF-8编码。
    浏览网页的时候，服务器会把动态生成的Unicode内容转换为UTF-8再传输到浏览器
在最新的Python 3版本中，字符串是以Unicode编码的，也就是说，Python的字符串支持多语言
Python提供了ord()函数获取字符的整数表示，chr()函数把整数编码转换为对应的字符
如果要在网络上传输，或者保存到磁盘上，就需要把str变为以字节为单位的bytes
    Python对bytes类型的数据用带b前缀的单引号或双引号表示：x = b'ABC'。bytes的每个字符都只占用一个字节
    以Unicode表示的str通过encode()方法可以编码为指定的bytes，例如：'ABC'.encode('ascii')。'中文'.encode('utf-8')
    含有中文的str无法用ASCII编码，因为中文编码的范围超过了ASCII编码的范围，Python会报错。
如果我们从网络或磁盘上读取了字节流，那么读到的数据就是bytes。要把bytes变为str，就需要用decode()方法：b'\xe4\xb8\xad\xe6\x96\x87'.decode('utf-8')
'中文'
len()函数计算的是str的字符数，如果换成bytes，len()函数就计算字节数：
    >>> len(b'\xe4\xb8\xad\xe6\x96\x87')
    6
由于Python源代码也是一个文本文件，所以，当你的源代码中包含中文的时候，在保存源代码时，就需要务必指定保存为UTF-8编码。
当Python解释器读取源代码时，为了让它按UTF-8编码读取，我们通常在文件开头写上这两行：
    #!/usr/bin/env python3          告诉Linux/OS X系统，这是一个Python可执行程序
    # -*- coding: utf-8 -*-         告诉Python解释器，按照UTF-8编码读取源代码
格式化字符串：%d-整数。   %f-浮点数。      %s-字符串。     %x-十六进制整数
    有几个%?占位符，后面就跟几个变量或者值，顺序要对应好。如果只有一个%?，括号可以省略。
    >>> 'Hello, %s' % 'world'
    'Hello, world'
    >>> 'Hi, %s, you have $%d.' % ('Michael', 1000000)
    'Hi, Michael, you have $1000000.'
    用%%来表示字符串中的%。
list同其他语言中的数组。数组名[-1]，表示的是列表中倒数第一个元素。下标是从0开始的。
tuple一旦初始化就不能修改。是用（）。list是用[]。只有1个元素的tuple定义时必须加一个逗号,
tuple所谓的“不变”是说，tuple的每个元素，指向永远不变。指向一个list，就不能改成指向其他对象，但指向的这个list本身是可变的！
如果可能，能用tuple代替list就尽量用tuple
input()返回的数据类型是str






